?rpois
lambda0 <- 1
lambda <- Yt <- vector("numeric",100)
for (t in 1:100){
if( t == 1){
lambda[1] <- lambda0
Yt[1] <- rpois(1,lambda0)
}else{
lambda[t] <- 2 + 0.3*lambda[(t-1)] + 0.6*Yt[(t-1)]
Yt[t] <- rpois(1,lambda[t])
}
}
plot.ts(Yt)
lambda0 <- 1
lambda <- Yt <- vector("numeric",100)
for (t in 1:100){
if( t == 1){
lambda[1] <- lambda0
Yt[1] <- rpois(1,lambda0)
}else{
lambda[t] <- 2 + 0.333*lambda[(t-1)] + 0.666*Yt[(t-1)]
Yt[t] <- rpois(1,lambda[t])
}
}
plot.ts(Yt)
lambda0 <- 1
TT <- 10000
lambda <- Yt <- vector("numeric",TT)
for (t in 1:TT){
if( t == 1){
lambda[1] <- lambda0
Yt[1] <- rpois(1,lambda0)
}else{
lambda[t] <- 2 + 0.333*lambda[(t-1)] + 0.666*Yt[(t-1)]
Yt[t] <- rpois(1,lambda[t])
}
}
plot.ts(Yt)
lambda0 <- 1
TT <- 10000
lambda <- Yt <- vector("numeric",TT)
for (t in 1:TT){
if( t == 1){
lambda[1] <- lambda0
Yt[1] <- rpois(1,lambda0)
}else{
lambda[t] <- 2 + 0.335*lambda[(t-1)] + 0.666*Yt[(t-1)]
Yt[t] <- rpois(1,lambda[t])
}
}
plot.ts(Yt)
gc()
library(cglasso)
data(QuickStartExample)
x <- QuickStartExample$x
y <- QuickStartExample$y
fit <- classo(x, y)
plot(fit)
coef(fit, s = 0.1)
print(fit)
set.seed(29)
nx <- array(rnorm(5*20), c(5,20)) + (1+1i) * array(rnorm(5*20), c(5,20))
for (j in 1:20) nx[,j] <- nx[,j] / sqrt(mean(Mod(nx[,j])^2))
predict(fit, newx = nx, s = c(0.1, 0.05))
set.seed(29)
nx <- array(rnorm(5*20), c(5,20)) + (1+1i) * array(rnorm(5*20), c(5,20))
for (j in 1:20) nx[,j] <- nx[,j] / sqrt(mean(Mod(nx[,j])^2))
predict(fit, newx = nx, s = c(0.1, 0.05))
cvfit <- cv.classo(x, y)
plot(cvfit)
cvfit$lambda.min
coef(cvfit, s = "lambda.min")
cvfit$lambda.min
coef(cvfit, s = "lambda.min")
predict(cvfit, newx = x[1:5,], s = "lambda.min")
